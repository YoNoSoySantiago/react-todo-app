{"version":3,"sources":["hooks/useGetTasks.jsx","store/AppContext.jsx","components/TaskForm/TaskForm.jsx","components/TasksList/TasksList.jsx","components/SortItems/SortItems.jsx","App.jsx","index.js"],"names":["useGetTasks","useState","tasks","setTasks","requestTasks","a","axios","get","response","shortTasks","data","slice","useEffect","AppContext","createContext","AppContextWrapper","children","sortType","setSortType","newTasks","sortTasks","tasksToOrder","map","task","sort","b","title","state","addTask","taskName","newTask","userId","id","uuid","completed","taskWithOrder","deleteTask","taskId","filter","editTaskTitle","newTitle","Provider","value","TaskForm","text","setText","useContext","className","onSubmit","e","preventDefault","TextField","label","variant","required","onChange","target","Button","disabled","length","TaskItem","saveTaskTitle","isEditable","setIsEditable","itemTitle","setItemTitle","Box","my","p","display","flexDirection","justifyContent","alignItems","sx","border","borderColor","Typography","IconButton","color","onClick","TasksList","px","SortItems","width","FormControl","InputLabel","Select","labelId","MenuItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ffcf488.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useGetTasks = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const requestTasks = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://jsonplaceholder.typicode.com/todos\"\r\n      );\r\n\r\n      const shortTasks = response.data.slice(0, 5);\r\n      setTasks(shortTasks);\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    requestTasks();\r\n  }, []);\r\n\r\n  return {\r\n    tasks,\r\n  };\r\n};\r\n\r\nexport default useGetTasks;\r\n","import React, { useState, createContext, useEffect } from \"react\";\r\nimport { v1 as uuid } from \"uuid\";\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppContextWrapper = ({ children }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [sortType, setSortType] = useState(\"asc\");\r\n\r\n  useEffect(() => {\r\n    const newTasks = sortTasks(tasks);\r\n    setTasks(newTasks);\r\n    //eslint-disable-next-line\r\n  }, [sortType]);\r\n\r\n  const addTask = (taskName) => {\r\n    const newTask = {\r\n      userId: 1,\r\n      id: uuid(),\r\n      title: taskName,\r\n      completed: false,\r\n    };\r\n\r\n    const newTasks = [...tasks, newTask];\r\n\r\n    const taskWithOrder = sortTasks(newTasks);\r\n\r\n    setTasks(taskWithOrder);\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    const newTasks = tasks.filter((task) => task.id !== taskId);\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const editTaskTitle = (taskId, newTitle) => {\r\n    const newTasks = tasks.map((task) => {\r\n      if (task.id === taskId) {\r\n        return {\r\n          ...task,\r\n          title: newTitle,\r\n        };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  const sortTasks = (tasksToOrder) => {\r\n    const newTasks = tasksToOrder.map((task) => task);\r\n    if (sortType === \"asc\") {\r\n      newTasks.sort((a, b) => (a.title > b.title ? 1 : -1));\r\n    } else {\r\n      newTasks.sort((a, b) => (a.title < b.title ? 1 : -1));\r\n    }\r\n\r\n    return newTasks;\r\n  };\r\n\r\n  const state = {\r\n    tasks,\r\n    setTasks,\r\n    addTask,\r\n    deleteTask,\r\n    editTaskTitle,\r\n    sortType,\r\n    setSortType,\r\n  };\r\n\r\n  return <AppContext.Provider value={state}>{children}</AppContext.Provider>;\r\n};\r\n\r\nexport default AppContext;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./TaskForm.scss\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AppContext from \"../../store/AppContext\";\r\n\r\nconst TaskForm = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const state = useContext(AppContext);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    state.addTask(text);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"TaskFormContainer\" onSubmit={handleClick}>\r\n      <TextField\r\n        className=\"TaskFormContainer__input\"\r\n        label=\"Nombre de la tarea\"\r\n        variant=\"outlined\"\r\n        value={text}\r\n        required\r\n        onChange={(e) => setText(e.target.value)}\r\n      />\r\n      <Button\r\n        className=\"TaskFormContainer__button\"\r\n        variant=\"outlined\"\r\n        disabled={!text.length}\r\n      >\r\n        Crear\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useContext, useState } from \"react\";\r\nimport AppContext from \"../../store/AppContext\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport SaveIcon from \"@mui/icons-material/Save\";\r\nimport \"./TasksList.scss\";\r\n\r\nconst TaskItem = ({ title, deleteTask, saveTaskTitle }) => {\r\n  const [isEditable, setIsEditable] = useState(false);\r\n  const [itemTitle, setItemTitle] = useState(title);\r\n\r\n  return (\r\n    <Box\r\n      my=\"2%\"\r\n      p=\"2%\"\r\n      display=\"flex\"\r\n      flexDirection=\"row\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      sx={{ border: 1, borderColor: \"grey.400\" }}\r\n    >\r\n      {!isEditable && (\r\n        <Typography className=\"TaskItem__title\">{title}</Typography>\r\n      )}\r\n      {isEditable && (\r\n        <TextField\r\n          className=\"TaskItem__title\"\r\n          variant=\"standard\"\r\n          value={itemTitle}\r\n          onChange={(e) => setItemTitle(e.target.value)}\r\n        />\r\n      )}\r\n      {!isEditable && (\r\n        <IconButton\r\n          className=\"TaskItem__edit\"\r\n          color=\"primary\"\r\n          onClick={() => setIsEditable(true)}\r\n        >\r\n          <EditIcon />\r\n        </IconButton>\r\n      )}\r\n      {isEditable && (\r\n        <IconButton\r\n          className=\"TaskItem__save\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            setIsEditable(false);\r\n            saveTaskTitle(itemTitle);\r\n          }}\r\n          disabled={!itemTitle.length}\r\n        >\r\n          <SaveIcon />\r\n        </IconButton>\r\n      )}\r\n      <IconButton\r\n        className=\"TaskItem__delete\"\r\n        color=\"error\"\r\n        onClick={deleteTask}\r\n      >\r\n        <ClearIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst TasksList = () => {\r\n  const state = useContext(AppContext);\r\n  return (\r\n    <Box my=\"2%\" px=\"1%\" className=\"TasksListContainer\">\r\n      {state.tasks.map((task) => (\r\n        <TaskItem\r\n          key={task.id}\r\n          title={task.title}\r\n          deleteTask={() => state.deleteTask(task.id)}\r\n          saveTaskTitle={(itemTitle) => state.editTaskTitle(task.id, itemTitle)}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n","import React, { useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport \"./SortItems.scss\";\r\nimport AppContext from \"../../store/AppContext\";\r\n\r\nconst SortItems = () => {\r\n  const state = useContext(AppContext);\r\n\r\n  return (\r\n    <Box my=\"2%\" width=\"100%\" display=\"flex\" justifyContent=\"flex-end\">\r\n      <FormControl className=\"sortItemsForm\">\r\n        <InputLabel id=\"sortSelectLabel\">Ordenar</InputLabel>\r\n        <Select\r\n          labelId=\"sortSelectLabel\"\r\n          id=\"sortSelect\"\r\n          value={state.sortType}\r\n          label=\"Ordenar\"\r\n          onChange={(e) => state.setSortType(e.target.value)}\r\n        >\r\n          <MenuItem value={\"asc\"}>Ascendente</MenuItem>\r\n          <MenuItem value={\"desc\"}>Descentente</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SortItems;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport useGetTasks from \"./hooks/useGetTasks\";\r\nimport AppContext from \"./store/AppContext\";\r\nimport TaskForm from \"./components/TaskForm/TaskForm\";\r\nimport TasksList from \"./components/TasksList/TasksList\";\r\nimport SortItems from \"./components/SortItems/SortItems\";\r\nimport \"./App.scss\";\r\n\r\nconst App = () => {\r\n  const { tasks } = useGetTasks();\r\n  const state = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    state.setTasks(tasks);\r\n  }, [tasks]);\r\n\r\n  return (\r\n    <div className=\"AppContainer\">\r\n      <TaskForm />\r\n      <SortItems />\r\n      <TasksList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { AppContextWrapper } from \"./store/AppContext\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppContextWrapper>\r\n      <App />\r\n    </AppContextWrapper>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}